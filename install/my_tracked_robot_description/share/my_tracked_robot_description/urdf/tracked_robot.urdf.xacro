<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="tracked_robot">

    <!-- Define Robot constants -->
    <xacro:property name="chassis_length" value="0.4"/>
    <xacro:property name="chassis_width" value="0.3"/>
    <xacro:property name="chassis_height" value="0.15"/>
    <xacro:property name="chassis_mass" value="5.0"/>

    <!-- Track properties (for visual and collision) -->
    <xacro:property name="track_length" value="0.35"/>
    <xacro:property name="track_width" value="0.06"/>
    <xacro:property name="track_height" value="0.08"/>
    <xacro:property name="track_mass" value="1.0"/>
    <xacro:property name="track_separation" value="0.32"/> <!-- Distance between the two tracks -->

    <!-- Wheel properties (for the diff_drive plugin physics) -->
    <xacro:property name="wheel_radius" value="${track_height / 2}"/>
    
    <!-- Material Definitions -->
    <material name="blue">
        <color rgba="0.2 0.4 0.8 1.0"/>
    </material>
    <material name="black">
        <color rgba="0.1 0.1 0.1 1.0"/>
    </material>
    <material name="red">
        <color rgba="0.8 0.1 0.1 1.0"/>
    </material>

    <!-- BASE LINK (Chassis) -->
    <link name="base_link">
        <visual>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${chassis_mass}"/>
            <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
        </inertial>
    </link>

    <!-- WHEEL/TRACK LINKS -->
    <link name="left_track_link">
        <visual>
            <geometry>
                <box size="${track_length} ${track_width} ${track_height}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <box size="${track_length} ${track_width} ${track_height}"/>
            </geometry>
            <!-- NEW: Added friction properties for Gazebo -->
            <surface>
                <friction>
                    <ode>
                        <mu>1.0</mu>  <!-- Primary friction (forward/backward) -->
                        <mu2>0.2</mu2> <!-- Secondary friction (sideways) -->
                    </ode>
                </friction>
            </surface>
        </collision>
        <inertial>
            <mass value="${track_mass}"/>
            <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
        </inertial>
    </link>

    <link name="right_track_link">
        <visual>
            <geometry>
                <box size="${track_length} ${track_width} ${track_height}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <box size="${track_length} ${track_width} ${track_height}"/>
            </geometry>
            <!-- NEW: Added friction properties for Gazebo -->
            <surface>
                <friction>
                    <ode>
                        <mu>1.0</mu>
                        <mu2>0.2</mu2>
                    </ode>
                </friction>
            </surface>
        </collision>
        <inertial>
            <mass value="${track_mass}"/>
            <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
        </inertial>
    </link>

    <!-- JOINTS -->
    <!-- The joints are still 'continuous' like wheels for the plugin -->
    <joint name="left_track_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_track_link"/>
        <origin xyz="0 ${track_separation/2} -${chassis_height/2 - track_height/2}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
    </joint>

    <joint name="right_track_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_track_link"/>
        <origin xyz="0 -${track_separation/2} -${chassis_height/2 - track_height/2}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
    </joint>

    <!-- SENSORS -->
    <link name="laser_link">
        <visual>
            <geometry>
                <cylinder radius="0.03" length="0.05"/>
            </geometry>
            <material name="red"/> <!-- This will now work -->
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.03" length="0.05"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
        </inertial>
    </link>

    <joint name="laser_joint" type="fixed">
        <parent link="base_link"/>
        <child link="laser_link"/>
        <origin xyz="${chassis_length/2 - 0.025} 0 ${chassis_height/2}" rpy="0 0 0"/>
    </joint>

    <!-- GAZEBO PLUGINS -->
    <gazebo>
        <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">
            <ros>
                <namespace>/</namespace>
            </ros>
            <!-- UPDATED: Point to the new joint names -->
            <left_joint>left_track_joint</left_joint>
            <right_joint>right_track_joint</right_joint>
            
            <!-- These are still based on "wheels" for physics calculation -->
            <wheel_separation>${track_separation}</wheel_separation>
            <wheel_diameter>${2*wheel_radius}</wheel_diameter>
            
            <max_wheel_torque>100</max_wheel_torque> <!-- Increased torque just in case -->
            <max_wheel_acceleration>10.0</max_wheel_acceleration>
            
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>false</publish_wheel_tf>
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_link</robot_base_frame>
        </plugin>
    </gazebo>

    <gazebo reference="laser_link">
        <sensor name="laser" type="ray">
            <!-- ... (rest of sensor plugin is the same) ... -->
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1</resolution>
                        <min_angle>-3.14159</min_angle>
                        <max_angle>3.14159</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.12</min>
                    <max>10.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <namespace>/</namespace>
                    <argument>--ros-args -r ~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>laser_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>
</robot>