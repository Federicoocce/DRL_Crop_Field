<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="tracked_robot">

    <!-- Properties -->
    <xacro:property name="chassis_length" value="0.4"/>
    <xacro:property name="chassis_width" value="0.3"/>
    <xacro:property name="chassis_height" value="0.15"/>
    <xacro:property name="chassis_mass" value="5.0"/>

    <xacro:property name="track_visual_length" value="0.35"/>
    <xacro:property name="track_visual_width" value="0.06"/>
    <xacro:property name="track_visual_height" value="0.08"/>

    <xacro:property name="track_separation" value="0.32"/> <!-- Separation between left/right wheel sets -->

    <!-- Wheel Properties -->
    <xacro:property name="wheel_radius" value="${track_visual_height / 2}"/>
    <xacro:property name="wheel_width" value="${track_visual_width * 0.9}"/> <!-- Slightly narrower than track visual -->
    <xacro:property name="wheel_mass" value="0.5"/>
    <xacro:property name="wheel_x_spacing" value="${track_visual_length * 0.7}"/> <!-- Distance between front and rear wheel centers on one side -->

    <xacro:property name="PI" value="3.1415926535897931"/>

    <!-- Inertial calculation macro for a box -->
    <xacro:macro name="inertial_box" params="mass x y z">
        <inertial>
            <mass value="${mass}"/>
            <inertia ixx="${(1/12) * mass * (y*y + z*z)}" ixy="0.0" ixz="0.0"
                     iyy="${(1/12) * mass * (x*x + z*z)}" iyz="0.0"
                     izz="${(1/12) * mass * (x*x + y*y)}"/>
        </inertial>
    </xacro:macro>

    <!-- Inertial calculation macro for a cylinder aligned along Y (for wheels) -->
    <xacro:macro name="inertial_cylinder_y" params="mass radius length">
      <inertial>
        <mass value="${mass}"/>
        <inertia ixx="${(1/12)*mass*(3*radius*radius + length*length)}" ixy="0.0" ixz="0.0"
                 iyy="${(1/2)*mass*radius*radius}" iyz="0.0"
                 izz="${(1/12)*mass*(3*radius*radius + length*length)}"/>
      </inertial>
    </xacro:macro>

    <!-- Base Footprint (Dummy Link) -->
    <link name="base_footprint"/>

    <!-- Base Link (Chassis) -->
    <link name="base_link">
        <visual>
            <geometry><box size="${chassis_length} ${chassis_width} ${chassis_height}"/></geometry>
            <material name="chassis_purple"><color rgba="0.5 0.0 0.5 1.0"/></material>
        </visual>
        <collision name="base_link_collision">
            <geometry><box size="${chassis_length} ${chassis_width} ${chassis_height}"/></geometry>
        </collision>
        <xacro:inertial_box mass="${chassis_mass}" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}"/>
    </link>

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="0 0 ${chassis_height/2 + wheel_radius}" rpy="0 0 0"/>
    </joint>

    <!-- WHEEL MACRO -->
    <xacro:macro name="wheel" params="prefix side side_y_reflect x_offset">
        <link name="${prefix}_${side}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
                <geometry><cylinder radius="${wheel_radius}" length="${wheel_width}"/></geometry>
                <material name="${side}_wheel_color"><color rgba="0.2 0.2 0.2 1"/></material>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
                <geometry><cylinder radius="${wheel_radius}" length="${wheel_width}"/></geometry>
            </collision>
            <xacro:inertial_cylinder_y mass="${wheel_mass}" radius="${wheel_radius}" length="${wheel_width}"/>
        </link>

        <joint name="${prefix}_${side}_wheel_joint" type="continuous">
            <parent link="base_link"/>
            <child link="${prefix}_${side}_wheel_link"/>
            <origin xyz="${x_offset} ${side_y_reflect * track_separation/2} -${chassis_height/2}" rpy="0 0 0"/>
            <axis xyz="0 1 0"/>
        </joint>

        <gazebo reference="${prefix}_${side}_wheel_link">
          <material>Gazebo/DarkGrey</material>
          <mu1>1.0</mu1>
          <mu2>0.1</mu2>
          <kp>500000.0</kp>
          <kd>10.0</kd>
          <implicitSpringDamper>1</implicitSpringDamper>
          <minDepth>0.001</minDepth>
          
        </gazebo>
    </xacro:macro>

    <!-- Instantiate Wheels -->
    <xacro:wheel prefix="front" side="left"  side_y_reflect="1"  x_offset="${wheel_x_spacing/2}"/>
    <xacro:wheel prefix="rear"  side="left"  side_y_reflect="1"  x_offset="-${wheel_x_spacing/2}"/>
    <xacro:wheel prefix="front" side="right" side_y_reflect="-1" x_offset="${wheel_x_spacing/2}"/>
    <xacro:wheel prefix="rear"  side="right" side_y_reflect="-1" x_offset="-${wheel_x_spacing/2}"/>

    <!-- Track Visual Links -->
    <link name="left_track_visual_link">
        <visual>
            <geometry><box size="${track_visual_length} ${track_visual_width} ${track_visual_height}"/></geometry>
            <material name="track_orange_material"><color rgba="1.0 0.5 0.0 1.0"/></material>
        </visual>
    </link>

    <link name="right_track_visual_link">
        <visual>
            <geometry><box size="${track_visual_length} ${track_visual_width} ${track_visual_height}"/></geometry>
            <material name="track_orange_material"/>
        </visual>
    </link>

    <joint name="left_track_visual_joint" type="fixed">
        <parent link="base_link"/>
        <child link="left_track_visual_link"/>
        <origin xyz="0 ${track_separation/2} -${chassis_height/2}" rpy="0 0 0"/>
    </joint>

    <joint name="right_track_visual_joint" type="fixed">
        <parent link="base_link"/>
        <child link="right_track_visual_link"/>
        <origin xyz="0 -${track_separation/2} -${chassis_height/2}" rpy="0 0 0"/>
    </joint>

    <!-- Lidar Sensor -->
    <link name="laser_link">
        <visual><geometry><cylinder radius="0.03" length="0.05"/></geometry></visual>
        <collision><geometry><cylinder radius="0.03" length="0.05"/></geometry></collision>
        <xacro:inertial_box mass="0.1" x="0.06" y="0.06" z="0.05"/>
    </link>

    <joint name="laser_joint" type="fixed">
        <parent link="base_link"/>
        <child link="laser_link"/>
        <origin xyz="${chassis_length/2 - 0.025} 0 ${chassis_height/2 + 0.025 + 0.01}" rpy="0 0 0"/>
    </joint>

    <!-- GAZEBO Material TAGS -->
    <gazebo reference="base_link"><material>Gazebo/Purple</material></gazebo>
    <gazebo reference="left_track_visual_link"><material>Gazebo/Orange</material></gazebo>
    <gazebo reference="right_track_visual_link"><material>Gazebo/Orange</material></gazebo>
    <gazebo reference="laser_link"><material>Gazebo/Red</material></gazebo>

    <!-- Gazebo Plugins -->
    <gazebo>
        <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">
            <ros></ros> <!-- Ensuring empty tag as per original -->
            <left_joint>rear_left_wheel_joint</left_joint>
            <right_joint>rear_right_wheel_joint</right_joint>
            <wheel_separation>${track_separation}</wheel_separation>
            <wheel_diameter>${2*wheel_radius}</wheel_diameter>
            <max_wheel_torque>200</max_wheel_torque>
            <max_wheel_acceleration>20.0</max_wheel_acceleration>
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>false</publish_wheel_tf>
            <publish_wheel_joint_state>true</publish_wheel_joint_state>
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_footprint</robot_base_frame>
            <update_rate>50</update_rate>
        </plugin>
    </gazebo>

    <gazebo reference="laser_link">
        <sensor name="laser" type="ray">
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan><horizontal><samples>360</samples><min_angle>-${PI}</min_angle><max_angle>${PI}</max_angle></horizontal></scan>
                <range><min>0.12</min><max>10.0</max></range>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros></ros> <!-- Ensuring empty tag as per original -->
                <output_type>sensor_msgs/LaserScan</output_type>
                <topic_name>scan</topic_name>
                <frame_name>laser_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>
   <!-- ========= GAZEBO-SPECIFIC PROPERTIES FOR THE ROBOT BODY ======== -->
    <!-- ====================================================================== -->
    <!-- ====================================================================== -->
    <gazebo reference="base_link">
        <!-- 1. Set the visual material -->
        <material>Gazebo/Purple</material>

        <!-- 2. Attach the Bumper/Contact Sensor -->
        <sensor name="contact_sensor" type="contact">
            <always_on>true</always_on>
            <update_rate>50.0</update_rate>
            <contact>
                <!-- This MUST match the name in the base_link's collision tag -->
                <collision>base_link_collision</collision>
            </contact>
            <plugin name="gazebo_ros_bumper" filename="libgazebo_ros_bumper.so">
                <ros>
                    <!-- Remap the output topic for clarity -->
                    <remapping>~/out:=bumper_states</remapping>
                </ros>
                <frame_name>base_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>

</robot>