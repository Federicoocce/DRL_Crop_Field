<?xml version="1.0"?>
<!-- IMPORTANT: The name is kept as "tracked_robot" to match your launch files. -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="tracked_robot">

    <!-- #################### PROPERTIES #################### -->
    <xacro:property name="PI" value="3.1415926535897931"/>
    
    <!-- Chassis Properties -->
    <xacro:property name="chassis_length" value="0.5"/>
    <xacro:property name="chassis_width" value="0.3"/>
    <xacro:property name="chassis_height" value="0.15"/>
    <xacro:property name="chassis_mass" value="5.0"/>

    <!-- Wheel Properties -->
    <xacro:property name="wheel_radius" value="0.1"/>
    <xacro:property name="wheel_width" value="0.05"/>
    <xacro:property name="wheel_mass" value="0.5"/>
    <xacro:property name="wheel_separation" value="0.35"/>
    <xacro:property name="wheel_x_offset" value="-0.2"/>
    <xacro:property name="wheel_z_offset" value="-0.05"/>

    <!-- Caster Properties -->
    <xacro:property name="caster_radius" value="0.05"/>
    <xacro:property name="caster_mass" value="0.1"/>
    <xacro:property name="caster_x_offset" value="0.2"/>
    <xacro:property name="caster_z_offset" value="-0.1"/>

    <!-- Lidar Properties -->
    <xacro:property name="lidar_radius" value="0.1"/>
    <xacro:property name="lidar_length" value="0.05"/>
    <xacro:property name="lidar_mass" value="0.2"/>
    <xacro:property name="lidar_z_offset" value="0.1"/>

    <!-- #################### ROBOT LINKS AND JOINTS #################### -->
    
    <link name="base_link">
        <visual>
            <geometry><box size="${chassis_length} ${chassis_width} ${chassis_height}"/></geometry>
            <material name="blue"><color rgba="0 0 0.8 1"/></material>
        </visual>
        <collision>
            <geometry><box size="${chassis_length} ${chassis_width} ${chassis_height}"/></geometry>
        </collision>
        <inertial>
            <mass value="${chassis_mass}"/>
            <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
        </inertial>
    </link>

    <xacro:macro name="wheel" params="side side_y_reflect">
        <link name="${side}_wheel_link">
            <visual>
                <origin rpy="${PI/2} 0 0" xyz="0 0 0"/>
                <geometry><cylinder radius="${wheel_radius}" length="${wheel_width}"/></geometry>
                <material name="black"><color rgba="0 0 0 1"/></material>
            </visual>
            <collision>
                <origin rpy="${PI/2} 0 0" xyz="0 0 0"/>
                <geometry><cylinder radius="${wheel_radius}" length="${wheel_width}"/></geometry>
            </collision>
            <inertial>
                <mass value="${wheel_mass}"/>
                <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
            </inertial>
        </link>

        <joint name="${side}_wheel_joint" type="continuous">
            <parent link="base_link"/>
            <child link="${side}_wheel_link"/>
            <origin rpy="0 0 0" xyz="${wheel_x_offset} ${side_y_reflect * wheel_separation/2} ${wheel_z_offset}"/>
            <axis xyz="0 1 0"/>
        </joint>
    </xacro:macro>

    <xacro:wheel side="left"  side_y_reflect="1"/>
    <xacro:wheel side="right" side_y_reflect="-1"/>

    <link name="caster_wheel_link">
        <visual><geometry><sphere radius="${caster_radius}"/></geometry><material name="black"><color rgba="0 0 0 1"/></material></visual>
        <collision><geometry><sphere radius="${caster_radius}"/></geometry></collision>
        <inertial>
            <mass value="${caster_mass}"/>
            <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
        </inertial>
    </link>

    <joint name="caster_wheel_joint" type="fixed"><parent link="base_link"/><child link="caster_wheel_link"/><origin xyz="${caster_x_offset} 0 ${caster_z_offset}"/></joint>

    <link name="lidar_link">
        <visual><geometry><cylinder length="${lidar_length}" radius="${lidar_radius}"/></geometry><material name="green"><color rgba="0 1 0 1"/></material></visual>
        <collision><geometry><cylinder length="${lidar_length}" radius="${lidar_radius}"/></geometry></collision>
        <inertial>
            <mass value="${lidar_mass}"/>
            <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
        </inertial>
    </link>

    <joint name="lidar_joint" type="fixed"><parent link="base_link"/><child link="lidar_link"/><origin xyz="0.15 0 ${lidar_z_offset}"/></joint>

    <!-- #################### GAZEBO PLUGINS AND REFERENCES #################### -->
    
    <gazebo reference="base_link"><material>Gazebo/Blue</material></gazebo>
    <gazebo reference="left_wheel_link"><material>Gazebo/Black</material></gazebo>
    <gazebo reference="right_wheel_link"><material>Gazebo/Black</material></gazebo>
    <gazebo reference="lidar_link"><material>Gazebo/Green</material></gazebo>
    <gazebo reference="caster_wheel_link"><material>Gazebo/Black</material><mu1>0.1</mu1><mu2>0.1</mu2></gazebo>

    <gazebo>
        <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">
            <ros><remapping>cmd_vel:=cmd_vel</remapping><remapping>odom:=odom</remapping></ros>
            <left_joint>left_wheel_joint</left_joint>
            <right_joint>right_wheel_joint</right_joint>
            <wheel_separation>${wheel_separation}</wheel_separation>
            <wheel_diameter>${2*wheel_radius}</wheel_diameter>
            <max_wheel_torque>20</max_wheel_torque>
            <max_wheel_acceleration>1.0</max_wheel_acceleration>
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_link</robot_base_frame>
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
        </plugin>
        
    
    </gazebo>

    <gazebo reference="lidar_link">
        <sensor name="lidar_sensor" type="ray">
            <visualize>true</visualize><update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal><samples>360</samples><min_angle>-${PI}</min_angle><max_angle>${PI}</max_angle></horizontal>
                </scan>
                <range><min>0.14</min><max>2.0</max></range>
            </ray>
            <plugin name="lidar_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros><remapping>~/out:=scan</remapping></ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>lidar_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>
</robot>